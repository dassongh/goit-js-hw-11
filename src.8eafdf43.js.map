{"version":3,"sources":["fetchPictures.js","index.js"],"names":["API_KEY","URL","IMAGE_TYPE","ORIENTATION","SAFE_SEARCH","fetchPictures","pic","searchingPic","response","fetch","json","refs","gallery","document","querySelector","form","renderPictures","hits","markup","map","el","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","addEventListener","e","preventDefault","query","currentTarget","elements","searchQuery","then","data"],"mappings":";AAUC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAVD,MAAMA,EAAU,qCACVC,EAAM,mBACNC,EAAa,QACbC,EAAc,aACdC,EAAc,OAEb,eAAeC,EAAcC,GAC5BC,MAAAA,EAAeD,EACfE,QAAiBC,iBAAiBR,SAAWD,OAAaO,gBAA2BL,iBAA0BC,iBAA2BC,KACzI,aAAMI,EAASE;;AC2BvB,aApCD,IAAA,EAAA,QAAA,mBAEA,MAAMC,EAAO,CACXC,QAASC,SAASC,cAAc,YAChCC,KAAMF,SAASC,cAAc,iBAU/B,SAASE,GAAe,KAAEC,IAClBC,MAAAA,EAASD,EAAKE,IAAIC,gDAERA,EAAGC,sBAAsBD,EAAGE,wGAGzBF,EAAGG,8EAGHH,EAAGI,iFAGAJ,EAAGK,qFAGFL,EAAGM,qDAIvBC,KAAK,IAERhB,EAAKC,QAAQgB,mBAAmB,YAAaV,GA5B/CP,EAAKI,KAAKc,iBAAiB,SAAWC,IACpCA,EAAEC,iBAEIC,MAAAA,EAAQF,EAAEG,cAAcC,SAASC,aACzBH,EAAAA,EAAAA,eAAAA,GAAOI,KAAKC,GAAQrB,EAAeqB","file":"src.8eafdf43.js","sourceRoot":"../src","sourcesContent":["const API_KEY = '23951184-b06d9454dd7ae17cb77deccea';\nconst URL = 'pixabay.com/api/';\nconst IMAGE_TYPE = 'photo'; \nconst ORIENTATION = 'horizontal';\nconst SAFE_SEARCH = 'true';\n\nexport async function fetchPictures(pic) {\n  const searchingPic = pic;\n  const response = await fetch(`https://${URL}?key=${API_KEY}&q=${searchingPic}&image_type=${IMAGE_TYPE}&orientation=${ORIENTATION}&safe_search=${SAFE_SEARCH}`);\n  return await response.json();\n}","import { fetchPictures } from './fetchPictures';\n\nconst refs = {\n  gallery: document.querySelector('.gallery'),\n  form: document.querySelector('.search-form'),\n}\n\nrefs.form.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const query = e.currentTarget.elements.searchQuery;\n  fetchPictures(query).then(data => renderPictures(data));\n})\n\nfunction renderPictures({ hits }) {\n  const markup = hits.map(el => {\n    return `<div class=\"photo-card\">\n      <img src=\"${el.webformatURL}\" alt=\"${el.tags}\" loading=\"lazy\" />\n      <div class=\"info\">\n        <p class=\"info-item\">\n          <b>Likes ${el.likes}</b>\n        </p>\n        <p class=\"info-item\">\n          <b>Views ${el.views}</b>\n        </p>\n        <p class=\"info-item\">\n          <b>Comments ${el.comments}</b>\n        </p>\n        <p class=\"info-item\">\n          <b>Downloads ${el.downloads}</b>\n        </p>\n    </div>\n  </div>`\n  }).join('');\n\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\n}\n"]}